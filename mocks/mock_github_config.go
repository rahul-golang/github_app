// Code generated by MockGen. DO NOT EDIT.
// Source: configurations/github_config.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockGithubConfigs is a mock of GithubConfigs interface
type MockGithubConfigs struct {
	ctrl     *gomock.Controller
	recorder *MockGithubConfigsMockRecorder
}

// MockGithubConfigsMockRecorder is the mock recorder for MockGithubConfigs
type MockGithubConfigsMockRecorder struct {
	mock *MockGithubConfigs
}

// NewMockGithubConfigs creates a new mock instance
func NewMockGithubConfigs(ctrl *gomock.Controller) *MockGithubConfigs {
	mock := &MockGithubConfigs{ctrl: ctrl}
	mock.recorder = &MockGithubConfigsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockGithubConfigs) EXPECT() *MockGithubConfigsMockRecorder {
	return m.recorder
}

// GetBaseURL mocks base method
func (m *MockGithubConfigs) GetBaseURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetBaseURL indicates an expected call of GetBaseURL
func (mr *MockGithubConfigsMockRecorder) GetBaseURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseURL", reflect.TypeOf((*MockGithubConfigs)(nil).GetBaseURL))
}

// GetExchangeTokenURL mocks base method
func (m *MockGithubConfigs) GetExchangeTokenURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchangeTokenURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetExchangeTokenURL indicates an expected call of GetExchangeTokenURL
func (mr *MockGithubConfigsMockRecorder) GetExchangeTokenURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchangeTokenURL", reflect.TypeOf((*MockGithubConfigs)(nil).GetExchangeTokenURL))
}
